name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Backend
        working-directory: ./backend
        run: |
          docker build -t eCommerce/backend .

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          docker build -t eCommerce/frontend .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Backend Docker Image
        run: |
          docker push eCommerce/backend

      - name: Push Frontend Docker Image
        run: |
          docker push eCommerce/frontend

    # deploy:
    #   runs-on: ubuntu-latest
    #   needs: build

    #   steps:
    #     - name: SSH to EC2 and Deploy
    #       uses: appleboy/ssh-action@v0.1.4
    #       with:
    #         host: ${{ secrets.EC2_HOST }}
    #         username: ${{ secrets.EC2_USER }}
    #         key: ${{ secrets.EC2_KEY }}
    #         script: |
    #           # Pull the latest images
    #           docker pull yourusername/backend
    #           docker pull yourusername/frontend

    #           # Stop and remove existing containers
    #           docker stop backend || true
    #           docker stop frontend || true
    #           docker rm backend || true
    #           docker rm frontend || true

    #           # Ensure MongoDB is running (this can be a separate instance or a managed service)
    #           # If MongoDB is installed locally, you can start it here
    #           # If using a managed service like Atlas, ensure the backend connects to the correct URI

    #           # Run new backend and frontend containers
    #           docker run -d --name backend -p 3000:3000 \
    #             -e MONGODB_URI=mongodb://root:example@your-mongo-db-server:27017/yourdbname \
    #             yourusername/backend
              
    #           docker run -d --name frontend -p 3001:3001 \
    #             yourusername/frontend
